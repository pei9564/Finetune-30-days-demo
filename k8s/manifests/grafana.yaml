apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: lora-system
  labels:
    app: grafana
    component: monitoring
    app.kubernetes.io/name: finetune-platform
data:
  datasource.yml: |-
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        uid: Prometheus
        url: http://prometheus:9090
        isDefault: true
        editable: false
  dashboard.yml: |-
    apiVersion: 1

    providers:
      - name: Finetune Dashboards
        orgId: 1
        folder: ""
        type: file
        disableDeletion: true
        allowUiUpdates: false
        options:
          path: /etc/grafana/dashboards
  dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": false,
      "fiscalYearStartMonth": 0,
      "graphTooltip": 0,
      "links": [],
      "panels": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "orange",
                    "value": null
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 6,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "textMode": "auto"
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "Prometheus"
              },
              "editorMode": "code",
              "expr": "sum(task_success_total)",
              "legendFormat": "Success",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "Prometheus"
              },
              "editorMode": "code",
              "expr": "sum(task_success_total + task_failure_total)",
              "legendFormat": "Total",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "Task Success / Total Count",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 20
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 6,
            "x": 6,
            "y": 0
          },
          "id": 2,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "Prometheus"
              },
              "editorMode": "code",
              "expr": "task_queue_length unless task_queue_length{pid!=''}",
              "legendFormat": "Queue Length",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Task Queue Length",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "mappings": [],
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 6,
            "x": 12,
            "y": 0
          },
          "id": 3,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "Prometheus"
              },
              "editorMode": "code",
              "expr": "rate(task_duration_seconds_sum[5m]) / rate(task_duration_seconds_count[5m])",
              "legendFormat": "Avg Duration",
              "range": true,
              "refId": "A"
            }
          ],
          "title": "Average Task Duration",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "Prometheus"
          },
          "fieldConfig": {
            "defaults": {
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 70
                  },
                  {
                    "color": "red",
                    "value": 90
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "Memory Usage"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "gbytes"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "id": 4,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "multi"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "prometheus",
                "uid": "Prometheus"
              },
              "editorMode": "code",
              "expr": "system_cpu_percent unless system_cpu_percent{pid!=''}",
              "legendFormat": "CPU Usage",
              "range": true,
              "refId": "A"
            },
            {
              "datasource": {
                "type": "prometheus",
                "uid": "Prometheus"
              },
              "editorMode": "code",
              "expr": "system_memory_usage_gigabytes unless system_memory_usage_gigabytes{pid!=''}",
              "legendFormat": "Memory Usage",
              "range": true,
              "refId": "B"
            }
          ],
          "title": "System Resource Usage",
          "type": "timeseries"
        }
      ],
      "refresh": "30s",
      "schemaVersion": 38,
      "style": "dark",
      "tags": [
        "finetune"
      ],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Finetune Task Monitoring",
      "uid": "finetune-monitor",
      "version": 2
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: lora-system
  labels:
    app: grafana
    component: monitoring
    app.kubernetes.io/name: finetune-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      component: monitoring
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources/datasource.yml
              subPath: datasource.yml
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/dashboards/dashboard.yml
              subPath: dashboard.yml
            - name: grafana-config
              mountPath: /etc/grafana/dashboards/dashboard.json
              subPath: dashboard.json
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: lora-system
  labels:
    app: grafana
    component: monitoring
    app.kubernetes.io/name: finetune-platform
spec:
  type: NodePort
  selector:
    app: grafana
    component: monitoring
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      nodePort: 30300
      protocol: TCP
