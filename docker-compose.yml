services:
  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - lora_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m celery -A app.tasks worker --loglevel=info -P solo
    volumes:
      - ./results:/app/results
      - ./app:/app/app
      - ./config:/app/config
      - ./data:/app/data
      - ./mlruns:/app/mlruns
    depends_on:
      redis:
        condition: service_healthy
      mlflow:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - TZ=${TZ}
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    networks:
      - lora_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m uvicorn app.main:app --host ${API_HOST} --port ${API_PORT} --reload
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./results:/app/results
      - ./app:/app/app
      - ./config:/app/config
      - ./data:/app/data
      - ./mlruns:/app/mlruns
    depends_on:
      redis:
        condition: service_healthy
      mlflow:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}
      - API_URL=${API_URL}
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - TZ=${TZ}
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    networks:
      - lora_network

  ui:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -m streamlit run app/stepper_ui.py
    ports:
      - "${UI_PORT}:8501"
    volumes:
      - ./results:/app/results
      - ./app:/app/app  # 開發模式：掛載源碼目錄到 /app/app
      - ./config:/app/config
      - ./mlruns:/app/mlruns
    depends_on:
      api:
        condition: service_started
      mlflow:
        condition: service_started
    environment:
      - API_URL=http://api:8000
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_UI_URL=http://localhost:5001
      - DEBUG=false  # 關閉調試模式
      - TZ=${TZ}
      - PYTHONPATH=${PYTHONPATH}
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}
    networks:
      - lora_network

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    ports:
      - "5001:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./results:/results
    command: >
      mlflow server 
      --backend-store-uri sqlite:///results/mlflow.db 
      --default-artifact-root /results 
      --serve-artifacts 
      --host 0.0.0.0
    networks:
      - lora_network

networks:
  lora_network:
    driver: bridge

volumes:
  redis_data:
  mlflow_data: